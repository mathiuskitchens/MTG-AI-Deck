---
import "../styles/global.css"


---
// no-op for review
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>MTG AI</title>
	</head>
	<body class="m-4 text-white bg-gray-700">
		<h1 class="text-3xl text-center mb-4 italic">MTG AI Deck Guide</h1>

<!--Search box -->
		<div class="w-3/4 md:w-1/2 lg:w-1/5 flex mx-auto">
			<input 
			id="cardInput"
			type="text"
			placeholder="Search card by name..."
			class="mx-auto w-3/4 md:w-4/5 my-6 border border-gray-300 p-2 rounded "
			/>
		<button id="searchButton" class="p-2 bg-white text-black border rounded-md my-6 hover:cursor-pointer">Search</button>

		</div>
				<p class="text-center mb-6" id="cardResult"></p>

		<!--end of search box -->
		

<h2 id="cardName" class="text-center text-2xl"></h2>
<img id="cardImage" class="mx-auto w-5/6 my-6 md:w-1/2 lg:w-1/5" src="" alt="" />
<div class="mx-auto w-5/6 md:w-1/2 lg:w-1/5">
	<p id="cardOracleText"></p>
	<a id="cardLink" class="underline hover:cursor-pointer text-blue-500" href="#" target="_blank">View on Scryfall</a>
</div>

<button id="aiButton" class="block mx-auto my-6 p-4 bg-white text-black border rounded-xl hover:cursor-pointer">
	Generate AI Deck Suggestion
</button>

<div class="w-1/2 block mx-auto m:w-1/3 lg:w-1/5" id="ai-response"></div>


<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

<script type="module">
	async function fetchCard(cardName) {
		try {
			const res = await fetch(`https://api.scryfall.com/cards/named?fuzzy=${encodeURIComponent(cardName)}`);
			if (!res.ok) throw new Error(`Failed to fetch card: ${cardName}`);

			const data = await res.json();
			return {
				name: data.name,
				image: data.image_uris?.normal ?? null,
				typeLine: data.type_line,
				oracleText: data.oracle_text,
				manaCost: data.mana_cost,
				setName: data.set_name,
				prices: data.prices,
				scryfallUrl: data.scryfall_uri,
			};
		} catch (error) {
			console.error(error);
			return null;
		}
	}

	async function getAIDeck(cardname) {
		console.log("Clicked AI")
		aiButton.disabled = true;
		aiButton.innerText = "Loading AI Deck Idea..."
		try {
			const aiRes = await fetch("http://localhost:8080/api/deck-idea", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({ card: cardname }),
			});

			if (!aiRes.ok) {
				throw new Error("Failed to call API");
			}
			const data = await aiRes.json();
			console.log("data", data.idea)
			const preMarkdown = data.idea;
			const postMarkdown = marked.parse(preMarkdown);
			document.getElementById("ai-response").innerHTML = postMarkdown;
			aiButton.innerText = "Check out this deck idea below!"

		} catch(error) {
			console.log(error);
			return null;
		}
	}

	function displayCard(card) {
		if (!card) {
			cardNameElem.innerText = "Card not found.";
			cardImageElem.style.display = "none";
			cardOracleElem.innerText = "";
			cardLinkElem.style.display = "none";
			return;
		}

		cardNameElem.innerText = card.name;
		cardImageElem.src = card.image || "";
		cardImageElem.alt = card.name || "";
		cardImageElem.style.display = card.image ? "block" : "none";
		cardOracleElem.innerText = card.oracleText || "No oracle text.";
		cardLinkElem.href = card.scryfallUrl || "#";
		cardLinkElem.style.display = "inline";
		cardResultElem.innerText = ""; // clear search status
	}

	async function handleSearch(cardName) {
		if (!cardName) {
			cardResultElem.innerText = "Please enter a card name.";
			return;
		}
		cardResultElem.innerText = "Searching...";
		const card = await fetchCard(cardName);
		displayCard(card);
	}

	// Cache elements once
	const inputElem = document.getElementById("cardInput");
	const searchButtonElem = document.getElementById("searchButton");
	const cardResultElem = document.getElementById("cardResult");
	const cardNameElem = document.getElementById("cardName");
	const cardImageElem = document.getElementById("cardImage");
	const cardOracleElem = document.getElementById("cardOracleText");
	const cardLinkElem = document.getElementById("cardLink");
	const aiButton = document.getElementById("aiButton");

	// Initial fetch on page load
	window.addEventListener("DOMContentLoaded", async () => {
		const defaultCard = await fetchCard("Cosmogoyf");
		displayCard(defaultCard);
	});

	// Search on button click
	searchButtonElem.addEventListener("click", () => {
		const cardName = inputElem.value.trim();
		handleSearch(cardName);
	});

	// Search on Enter keypress
	inputElem.addEventListener("keydown", (e) => {
		if (e.key === "Enter") {
			const cardName = inputElem.value.trim();
			handleSearch(cardName);
		}
	});

	// ai search here
	aiButton.addEventListener("click", () => {
	  const cardName = inputElem.value.trim();
	  getAIDeck(cardName)
	})
</script>


</body>
</html>

